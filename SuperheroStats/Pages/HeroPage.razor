@page "/hero/{heroName}"
@using SuperheroStats.Services
@using SuperheroStats.Data
@using System.Text.Json
@using System.Reflection
@using System.Globalization
@using System.Collections
@using System.Text.RegularExpressions
@using Microsoft.AspNetCore.Mvc.Diagnostics



@if (hero == null)
	{
	<h1>Loading Data...</h1>
	}
else
{
	<PageTitle>@hero.name</PageTitle>
	<div class="container">
		<div class="row">
			@*Left column with Character picture and name*@
			<div class="col-lg-4">
				<HeroAvatar hero="hero"></HeroAvatar>
				<br/>
				<h4>Affiliations</h4>
				<PillBadgesGeneric listValue="@hero.connections.groupAffiliation"></PillBadgesGeneric>
				<br/>
			</div>

			@*Middle columns Contains the cards with stats and info*@
			<div class="col-lg">
				@*Card to show power statistics *@
				<ProgressBarCard AttributeName="@hero.powerstats"></ProgressBarCard>
				@*Card to show appearance data *@
				<BasicCardTable AttributeName="@hero.appearance"></BasicCardTable>
				@*Card to show biography data *@
				<BasicCardTable AttributeName="@hero.biography"></BasicCardTable>
				@*Card to show work data *@
				<BasicCardTable AttributeName="@hero.work"></BasicCardTable>

			</div>
		</div>
	</div>

}



@code {
	[Parameter]
	public string heroName { get; set; }

	[Inject]
	public IHeroService? HeroService { get; set; }

	readonly TextInfo ti = CultureInfo.CurrentCulture.TextInfo;

	private static HeroModel? hero = null;

	protected override async Task OnInitializedAsync()
	{
		hero = await HeroService.GetHeroCache(heroName);
	}

	

	

}
