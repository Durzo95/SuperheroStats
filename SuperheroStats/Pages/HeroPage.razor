@page "/hero/{heroName}"
@using SuperheroStats.Services
@using SuperheroStats.Data
@using System.Text.Json



@*@if (hero == null)
	{
	<h1>Loading Data...</h1>
	}*@
<div class="container">
	<div class="row">
		<div class="col-3">
			<div class="row-fuid" id="hero-avatar-container">
				@*Image by default is displayed as inline-block, 
				you need to display it as block in order to center it with .mx-auto. 
				This can be done with built-in .d-block*@
				<img src="@hero.images.lg" class="mx-auto d-block" id="hero-avatar" alt="@hero.name"/>
				<div class="row">
					Test
				</div>
			</div>
			<div class="col-7"></div>
			<div class="col-3"></div>
		</div>
	</div>
</div>



@code {
	[Parameter]
	public string heroName { get; set; }

	[Inject]
	public IHeroService HeroService { get; set; }

	static string jsonData = System.IO.File.ReadAllText("wwwroot/sample-data/hero-sample.json");

	private Hero hero { get; set; } = JsonSerializer.Deserialize<Hero>(jsonData);



	//protected override async Task OnInitializedAsync() => await GetHeroDetails(heroName);


	private async Task GetHeroDetails(string heroName)
	{
		hero = (await HeroService.GetHero(heroName));
	}

}
